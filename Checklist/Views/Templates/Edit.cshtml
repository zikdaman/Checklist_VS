@model Checklist.Models.Template

@{
    Layout = null;
    ViewBag.Title = "Edit";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TemplateID)

    <div class="form-group">
        @Html.LabelFor(model => model.TemplateName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TemplateName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TemplateName, "", new { @class = "text-danger" })
        </div>
    </div>
    <h4>Attributes</h4>
    @if (Model.TemplateAttributes != null)
    {
        <div class="form-group col-md-12" id="attributesDiv">
            @foreach (var t in Model.TemplateAttributes.OrderBy(o=>o.TemplateAttributeOrder))
            {
                switch (t.TemplateAttributeType)
                {
                    case "Text":
                        Html.RenderPartial("_TemplateAttributes", t);
                        break;
                    case "Select":
                        Html.RenderPartial("_TemplateAttributesList", t);
                        break;
                    default:
                        Html.RenderPartial("_TemplateAttributes", t);
                        break;
                }
            }
        </div>

    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.Action("AttributeTypeDropdown")
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
